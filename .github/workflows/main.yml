name: Build, Test and Push Docker Images

on:  
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.TEST_DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f back/requirements.txt ]; then pip install -r back/requirements.txt; fi

    - name: Wait for PostgreSQL to become ready
      run: sleep 10

    - name: Set up PostgreSQL service
      run: |
        psql -h ${{ secrets.TEST_DB_HOST }} -U ${{ secrets.TEST_DB_USERNAME }} -c "DROP DATABASE IF EXISTS ${{ secrets.TEST_DB_NAME }};"
        psql -h ${{ secrets.TEST_DB_HOST }} -U ${{ secrets.TEST_DB_USERNAME }} -c "CREATE DATABASE ${{ secrets.TEST_DB_NAME }};"
      env:
        PGPASSWORD: ${{ secrets.TEST_DB_PASSWORD }}

    - name: Run backend unit tests
      run: |
        cd back
        pytest tests
      env:
        TEST_DB_USERNAME: ${{ secrets.TEST_DB_USERNAME }}
        TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        TEST_DB_HOST: localhost
        TEST_DB_PORT: 5432
        TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PW }}
      
    - name: Build and push backend image
      uses: docker/build-push-action@v2
      with:
        context: ./back
        push: true
        tags: tomademagn/outpace:backend
      env:
        OUTPACE_DB: ${{ secrets.OUTPACE_DB }}
        OUTPACE_HOST: ${{ secrets.OUTPACE_HOST }}
        OUTPACE_PASSWORD: ${{ secrets.OUTPACE_PASSWORD }}
        OUTPACE_PORT: ${{ secrets.OUTPACE_PORT }}
        OUTPACE_USER: ${{ secrets.OUTPACE_USER }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v2
      with:
        context: ./front
        push: true
        tags: tomademagn/outpace:frontend
      env:
        REACT_APP_CLIENT_ID: ${{ secrets.REACT_APP_CLIENT_ID }}
        REACT_APP_CLIENT_SECRET: ${{ secrets.REACT_APP_CLIENT_SECRET }}
        REACT_APP_HOST_URL: ${{ secrets.REACT_APP_HOST_URL }}
        REACT_APP_MAPBOX_ACCESS_TOKEN: ${{ secrets.REACT_APP_MAPBOX_ACCESS_TOKEN }}
        REACT_APP_ION_DEFAULT_ACCESS_TOKEN: ${{ secrets.REACT_APP_ION_DEFAULT_ACCESS_TOKEN }}
        REACT_APP_WEB_URL: ${{ secrets.REACT_APP_WEB_URL }}
